/* tslint:disable */
/* eslint-disable */
/**
 * portier KeyOnTheGo Service
 * Add basic auth for authorization when using cloud server. Use Account Id and M2M token for username and password respectively.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ShutdownPost200Response,
} from '../models/index';
import {
    ShutdownPost200ResponseFromJSON,
    ShutdownPost200ResponseToJSON,
} from '../models/index';

/**
 * 
 */
export class ServerControlApi extends runtime.BaseAPI {

    /**
     * Initiates a graceful shutdown of the server. Only work in local execution.
     * Shutdown the server
     */
    async shutdownPostRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ShutdownPost200Response>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {
            headerParameters["Authorization"] = "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
        }
        const response = await this.request({
            path: `/shutdown`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ShutdownPost200ResponseFromJSON(jsonValue));
    }

    /**
     * Initiates a graceful shutdown of the server. Only work in local execution.
     * Shutdown the server
     */
    async shutdownPost(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ShutdownPost200Response> {
        const response = await this.shutdownPostRaw(initOverrides);
        return await response.value();
    }

}
